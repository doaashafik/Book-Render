{"version":3,"sources":["store/Book/reducer.js","store/Loading/reducer.js","store/rootReducer.js","store/Loading/actions.js","network/apis/index.js","network/Interceptors/index.js","network/apis/Requests/Books.js","store/Book/sagas.js","store/Book/actions.js","store/Loading/sagas.js","store/rootSaga.js","store/index.js","components/button/Button.js","components/input/Input.js","components/bookSearch/BookSearch.js","components/bookCard/BookCard.js","pages/BookList/BookList.js","routes/history.js","routes/routes.js","components/loading/Loading.js","pages/App.js","index.js","store/Book/types.js","store/Loading/types.js"],"names":["require","BOOK_SEARCH_RECIEVE","ERROR_REQUESTS","INIT_STATE","IS_LOADING_RECIEVE","combineReducers","books","state","action","type","data","payload","error","isLoading","IS_LOADING","Instance","axios","create","baseURL","process","params","key","interceptors","response","use","store","dispatch","SuccessHandler","request","RequestHandler","searchRequest","query","a","get","q","JSON","stringify","handleBookSearch","BookSagaWatch","call","result","put","takeEvery","BOOK_SEARCH","handleLoading","IsLoadingWatch","loading","rootSaga","all","saga","createSagaMiddleware","composedEnhancer","composeWithDevTools","applyMiddleware","createStore","RootReducer","run","ButtonControl","props","content","htmlType","InputControl","BookSearch","onSubmit","initialValues","search","setFieldValue","values","justify","span","className","placeholder","name","value","onChange","event","target","Button","SearchOutlined","BookCard","book","imageLinks","description","title","publisher","src","thumbnail","alt","BookList","useDispatch","useSelector","items","map","item","id","volumeInfo","browserHistory","createBrowserHistory","Routes","history","exact","path","component","Loading","LoadingOutlined","App","getState","ReactDOM","render","document","getElementById","SUCCESS_REQUESTS"],"mappings":"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","file":"static/js/main.b54e4ab2.chunk.js","sourcesContent":["const { BOOK_SEARCH_RECIEVE, ERROR_REQUESTS } = require(\"./types\");\n\nconst INIT_STATE = {};\n\nexport const bookReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case BOOK_SEARCH_RECIEVE:\n      return (state = { ...state, data: action.payload });\n    case ERROR_REQUESTS:\n      return { ...state, error: true };\n    default:\n      return state;\n  }\n};\n","const { IS_LOADING_RECIEVE } = require(\"./types\");\n\nconst INIT_STATE =  false;\n\nexport const loadingReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case IS_LOADING_RECIEVE:\n      return state =  action.payload\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux'\nimport { bookReducer } from './Book/reducer';\nimport { loadingReducer } from './Loading/reducer'\nexport default combineReducers({\n    books: bookReducer,\n    isLoading: loadingReducer\n})","import { IS_LOADING, IS_LOADING_RECIEVE } from \"./types\";\n\n\nexport const isLoading = (payload) => ({\n  type: IS_LOADING,\n   payload\n});\nexport const isLoadingRecieve = (payload) => ({\n  type: IS_LOADING_RECIEVE,\n   payload\n});\n","import axios from \"axios\";\nimport { SuccessHandler,RequestHandler, ErrorHandler } from \"../Interceptors\";\nexport const Instance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  params: { key: process.env.REACT_APP_GOOGLE_API_KEY },\n});\nInstance.interceptors.response.use(\n  (response) => SuccessHandler(response),\n  (error) => ErrorHandler(error)\n);\nInstance.interceptors.request.use(\n  (request) => RequestHandler(request),\n);\n","import store from '../../store/index'\nimport { isLoading } from '../../store/Loading/actions'\nexport const ErrorHandler = (response) => {\n  store.dispatch(isLoading(false))\n return response\n}\n\nexport const SuccessHandler = (response) => {\n   store.dispatch(isLoading(false))\n  return response\n}\nexport const RequestHandler = (request) => {\n  store.dispatch(isLoading(true))\n return request\n}\n","import { Instance } from '../index'\nexport const searchRequest = async (query) => Instance.get('/', {\n    params: {\n        q: `${JSON.stringify(query)}`\n    }\n});\n  ","import { put, takeEvery, call } from \"redux-saga/effects\";\nimport {  BOOK_SEARCH } from \"./types\";\nimport { BookSearchAsync, BookSearchError } from \"./actions\";\nimport { searchRequest } from \"../../network/apis/Requests/Books\";\n\nfunction* handleBookSearch(query) {\n  try {\n    const result = yield call(searchRequest, query.payload);\n    yield put(BookSearchAsync(result.data));\n  }\n  catch {\n    yield put(BookSearchError());\n  }  \n}\nexport function* BookSagaWatch() {\n  yield takeEvery(BOOK_SEARCH, handleBookSearch);\n}\n","import { BOOK_SEARCH,ERROR_REQUESTS, BOOK_SEARCH_RECIEVE } from \"./types\";\n\nexport const BookSearch = (payload) => ({\n  type: BOOK_SEARCH,\n  payload,\n});\nexport const BookSearchAsync = (payload) => ({\n  type: BOOK_SEARCH_RECIEVE,\n  payload,\n});\n\nexport const BookSearchError = () => ({\n  type: ERROR_REQUESTS\n});\n","import { put, takeEvery } from \"redux-saga/effects\";\nimport {  IS_LOADING } from \"./types\";\nimport { isLoadingRecieve } from './actions'\nfunction* handleLoading(loading) {\n    yield put(isLoadingRecieve(loading.payload));\n}\nexport function* IsLoadingWatch() {\n  yield takeEvery(IS_LOADING, handleLoading);\n}\n","import { all } from 'redux-saga/effects'\nimport { BookSagaWatch } from './Book/sagas'\nimport { IsLoadingWatch } from './Loading/sagas'\n\nexport default function* rootSaga() {\n    yield all([\n      BookSagaWatch(),\n      IsLoadingWatch()\n    ])\n  }","import { createStore,  applyMiddleware } from \"redux\";\nimport RootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./rootSaga\";\nconst saga = createSagaMiddleware();\nconst composedEnhancer = composeWithDevTools(applyMiddleware(saga));\n\n const store = createStore(RootReducer, composedEnhancer);\nsaga.run(rootSaga);\nexport default store;","import { Button } from \"antd\";\n\nconst ButtonControl = (props) => {\n  const { content, type } = props;\n  return (\n    <Button htmlType={type}>\n      {content}\n    </Button>\n  );\n};\n\nexport default ButtonControl;\n","import { Input } from \"antd\";\n\nexport const InputControl = (props) => {\n  return <Input {...props} />;\n};\n","import { Formik, Form } from \"formik\";\nimport Button from \"../button/Button\";\nimport { InputControl } from \"../input/Input\";\nimport { Col, Row } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst BookSearch = ({ onSubmit }) => {\n  return (\n    <div>\n      <Formik onSubmit={onSubmit} initialValues={{ search: \"\" }}>\n        {({ setFieldValue, values }) => {\n          const { search } = values;\n          return (\n            <Row justify=\"center\">\n            <Col span={12}>\n              <Form className=\"d-flex\">\n                <InputControl\n                  type=\"text\"\n                  placeholder=\"Search By Name\"\n                  name=\"search\"\n                  value={search}\n                  onChange={(event) => setFieldValue(\"search\", event.target.value)}\n                />\n                <Button type=\"submit\" content={<SearchOutlined />} />\n              </Form>\n            </Col>\n          </Row>\n          )\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default BookSearch;\n","import React from \"react\";\n\nconst BookCard = ({ book }) => {\n  const { imageLinks, description, title, publisher } = book;\n  return (\n    <div className=\"d-flex book-search-item\">\n      {imageLinks && (\n        <div>\n          <img src={imageLinks.thumbnail} alt=\"small-thumbnail-book\" />\n        </div>\n      )}\n      <section>\n        <p>\n          <strong>Title:</strong> {title}\n        </p>\n        <p>\n          <strong>Publisher: </strong> {publisher}\n        </p>\n        {description && (\n          <p className=\"book-search-description\">\n            <strong>Description: </strong> {description}\n          </p>\n        )}\n      </section>\n    </div>\n  );\n};\nexport default BookCard;\n","import React from \"react\";\nimport BookListSearch from \"../../components/bookSearch/BookSearch\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BookSearch } from \"../../store/Book/actions\";\nimport \"./BookList.scss\";\nimport BookCard from \"../../components/bookCard/BookCard\";\n\nconst BookList = () => {\n  const dispatch = useDispatch();\n  const { data, error } = useSelector((state) => state.books);\n  /* Submit Process */\n  const onSubmit = (query) => {\n    dispatch(BookSearch(query.search));\n  };\n\n  return (\n    <div className=\"book-list-container\">\n      <h1 className=\"text-center\">Book Finder</h1>\n      <BookListSearch onSubmit={onSubmit} />\n      {!error && data  && (\n        <div className=\"mt-2\">\n          {data.items?.map((item, id) => (<BookCard key={id} book={item.volumeInfo} />))}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default BookList;\n","import { createBrowserHistory } from \"history\";\n\nexport const browserHistory = createBrowserHistory();","import React from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport BookList from \"../pages/BookList/BookList\";\nimport { browserHistory } from './history'\nexport default function Routes() {\n  return (\n    <Router history={browserHistory}>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={BookList}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport './Loading.scss'\nconst Loading = () => {\n  return (\n    <div className=\"loading-content\">\n      <div className=\"loading-icon\">\n        <LoadingOutlined />\n      </div>\n    </div>\n  );\n};\nexport default Loading;\n","import React from \"react\";\nimport store from \"../store\";\nimport './App.scss'\nimport Routes from \"../routes/routes\";\nimport Loading from \"../components/loading/Loading\";\nfunction App() {\n  return (\n    <>\n      { store.getState().isLoading && <Loading /> }\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const BOOK_SEARCH = 'BOOK_SEARCH';\nexport const BOOK_SEARCH_RECIEVE = 'BOOK_SEARCH_RECIEVE';\nexport const ERROR_REQUESTS = 'ERROR_REQUESTS';\nexport const SUCCESS_REQUESTS = 'SUCCESS_REQUESTS';\n","export const IS_LOADING = 'IS_LOADING';\nexport const IS_LOADING_RECIEVE = 'IS_LOADING_RECIEVE';"],"sourceRoot":""}