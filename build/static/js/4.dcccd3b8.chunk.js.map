{"version":3,"sources":["components/button/Button.js","components/input/Input.js","components/bookSearch/BookSearch.js","components/bookCard/BookCard.js","pages/BookList/BookList.js"],"names":["ButtonControl","props","content","type","htmlType","InputControl","BookSearch","onSubmit","initialValues","search","setFieldValue","values","justify","span","className","placeholder","name","value","onChange","event","target","Button","SearchOutlined","BookCard","book","imageLinks","description","title","publisher","src","thumbnail","alt","BookList","dispatch","useDispatch","useSelector","state","books","data","error","query","items","map","item","id","volumeInfo"],"mappings":"mLAWeA,EATO,SAACC,GAAW,IACxBC,EAAkBD,EAAlBC,QAASC,EAASF,EAATE,KACjB,OACE,cAAC,IAAD,CAAQC,SAAUD,EAAlB,SACGD,K,iBCJMG,EAAe,SAACJ,GAC3B,OAAO,cAAC,IAAD,eAAWA,K,2BC+BLK,EA5BI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OACE,8BACE,cAAC,IAAD,CAAQA,SAAUA,EAAUC,cAAe,CAAEC,OAAQ,IAArD,SACG,YAAgC,IAA7BC,EAA4B,EAA5BA,cACMD,EADsB,EAAbE,OACTF,OACR,OACE,cAAC,IAAD,CAAKG,QAAQ,SAAb,SACA,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,eAAC,IAAD,CAAMC,UAAU,SAAhB,UACE,cAAC,EAAD,CACEX,KAAK,OACLY,YAAY,iBACZC,KAAK,SACLC,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAWT,EAAc,SAAUS,EAAMC,OAAOH,UAE5D,cAACI,EAAD,CAAQlB,KAAK,SAASD,QAAS,cAACoB,EAAA,EAAD,mB,gBCIhCC,G,OAzBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACVC,EAA8CD,EAA9CC,WAAYC,EAAkCF,EAAlCE,YAAaC,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,UACxC,OACE,sBAAKd,UAAU,0BAAf,UACGW,GACC,8BACE,qBAAKI,IAAKJ,EAAWK,UAAWC,IAAI,2BAGxC,oCACE,8BACE,4CADF,IAC2BJ,KAE3B,8BACE,iDADF,IACgCC,KAE/BF,GACC,oBAAGZ,UAAU,0BAAb,UACE,mDADF,IACkCY,aCO7BM,UApBE,WAAO,IAAD,EACfC,EAAWC,cADI,EAEGC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAA7CC,EAFa,EAEbA,KAAMC,EAFO,EAEPA,MAMd,OACE,sBAAKzB,UAAU,sBAAf,UACE,oBAAIA,UAAU,cAAd,yBACA,cAAC,EAAD,CAAgBP,SAPH,SAACiC,GAChBP,EAAS3B,YAAWkC,EAAM/B,aAOtB8B,GAASD,GACT,qBAAKxB,UAAU,OAAf,mBACGwB,EAAKG,aADR,aACG,EAAYC,KAAI,SAACC,EAAMC,GAAP,OAAe,cAAC,EAAD,CAAmBpB,KAAMmB,EAAKE,YAAfD","file":"static/js/4.dcccd3b8.chunk.js","sourcesContent":["import { Button } from \"antd\";\n\nconst ButtonControl = (props) => {\n  const { content, type } = props;\n  return (\n    <Button htmlType={type}>\n      {content}\n    </Button>\n  );\n};\n\nexport default ButtonControl;\n","import { Input } from \"antd\";\n\nexport const InputControl = (props) => {\n  return <Input {...props} />;\n};\n","import { Formik, Form } from \"formik\";\nimport Button from \"../button/Button\";\nimport { InputControl } from \"../input/Input\";\nimport { Col, Row } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst BookSearch = ({ onSubmit }) => {\n  return (\n    <div>\n      <Formik onSubmit={onSubmit} initialValues={{ search: \"\" }}>\n        {({ setFieldValue, values }) => {\n          const { search } = values;\n          return (\n            <Row justify=\"center\">\n            <Col span={12}>\n              <Form className=\"d-flex\">\n                <InputControl\n                  type=\"text\"\n                  placeholder=\"Search By Name\"\n                  name=\"search\"\n                  value={search}\n                  onChange={(event) => setFieldValue(\"search\", event.target.value)}\n                />\n                <Button type=\"submit\" content={<SearchOutlined />} />\n              </Form>\n            </Col>\n          </Row>\n          )\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default BookSearch;\n","import React from \"react\";\n\nconst BookCard = ({ book }) => {\n  const { imageLinks, description, title, publisher } = book;\n  return (\n    <div className=\"d-flex book-search-item\">\n      {imageLinks && (\n        <div>\n          <img src={imageLinks.thumbnail} alt=\"small-thumbnail-book\" />\n        </div>\n      )}\n      <section>\n        <p>\n          <strong>Title:</strong> {title}\n        </p>\n        <p>\n          <strong>Publisher: </strong> {publisher}\n        </p>\n        {description && (\n          <p className=\"book-search-description\">\n            <strong>Description: </strong> {description}\n          </p>\n        )}\n      </section>\n    </div>\n  );\n};\nexport default BookCard;\n","import React from \"react\";\nimport BookListSearch from \"../../components/bookSearch/BookSearch\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BookSearch } from \"../../store/Book/actions\";\nimport \"./BookList.scss\";\nimport BookCard from \"../../components/bookCard/BookCard\";\n\nconst BookList = () => {\n  const dispatch = useDispatch();\n  const { data, error } = useSelector((state) => state.books);\n  /* Submit Process */\n  const onSubmit = (query) => {\n    dispatch(BookSearch(query.search));\n  };\n\n  return (\n    <div className=\"book-list-container\">\n      <h1 className=\"text-center\">Book Finder</h1>\n      <BookListSearch onSubmit={onSubmit} />\n      {!error && data  && (\n        <div className=\"mt-2\">\n          {data.items?.map((item, id) => (<BookCard key={id} book={item.volumeInfo} />))}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default BookList;\n"],"sourceRoot":""}