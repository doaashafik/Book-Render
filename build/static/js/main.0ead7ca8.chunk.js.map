{"version":3,"sources":["components/button/Button.js","components/input/Input.js","components/bookSearch/BookSearch.js","components/bookCard/BookCard.js","pages/BookList/BookList.js","store/Book/actions.js","routes/history.js","routes/routes.js","components/loading/Loading.js","pages/App.js","store/Book/reducer.js","store/Loading/reducer.js","store/rootReducer.js","store/Loading/actions.js","network/apis/index.js","network/Interceptors/index.js","network/apis/Requests/Books.js","store/Book/sagas.js","store/Loading/sagas.js","store/rootSaga.js","store/index.js","index.js","store/Book/types.js","store/Loading/types.js"],"names":["ButtonControl","props","content","type","htmlType","InputControl","BookSearch","onSubmit","initialValues","search","setFieldValue","values","justify","span","className","placeholder","name","value","onChange","event","target","Button","SearchOutlined","BookCard","book","imageLinks","description","title","publisher","src","thumbnail","alt","BookList","dispatch","useDispatch","useSelector","state","books","data","error","query","payload","BOOK_SEARCH","items","map","item","id","volumeInfo","browserHistory","createBrowserHistory","Routes","history","exact","path","component","Loading","LoadingOutlined","App","loading","isLoading","require","BOOK_SEARCH_RECIEVE","ERROR_REQUESTS","INIT_STATE","IS_LOADING_RECIEVE","combineReducers","action","IS_LOADING","Instance","axios","create","baseURL","process","params","key","interceptors","response","use","store","SuccessHandler","request","RequestHandler","searchRequest","a","get","q","JSON","stringify","handleBookSearch","BookSagaWatch","call","result","put","takeEvery","handleLoading","IsLoadingWatch","rootSaga","all","saga","createSagaMiddleware","composedEnhancer","composeWithDevTools","applyMiddleware","createStore","RootReducer","run","ReactDOM","render","document","getElementById","SUCCESS_REQUESTS"],"mappings":"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","file":"static/js/main.0ead7ca8.chunk.js","sourcesContent":["import { Button } from \"antd\";\n\nconst ButtonControl = (props) => {\n  const { content, type } = props;\n  return (\n    <Button htmlType={type}>\n      {content}\n    </Button>\n  );\n};\n\nexport default ButtonControl;\n","import { Input } from \"antd\";\n\nexport const InputControl = (props) => {\n  return <Input {...props} />;\n};\n","import { Formik, Form } from \"formik\";\nimport Button from \"../button/Button\";\nimport { InputControl } from \"../input/Input\";\nimport { Col, Row } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst BookSearch = ({ onSubmit }) => {\n  return (\n    <div>\n      <Formik onSubmit={onSubmit} initialValues={{ search: \"\" }}>\n        {({ setFieldValue, values }) => {\n          const { search } = values;\n          return (\n            <Row justify=\"center\">\n            <Col span={12}>\n              <Form className=\"d-flex\">\n                <InputControl\n                  type=\"text\"\n                  placeholder=\"Search By Name\"\n                  name=\"search\"\n                  value={search}\n                  onChange={(event) => setFieldValue(\"search\", event.target.value)}\n                />\n                <Button type=\"submit\" content={<SearchOutlined />} />\n              </Form>\n            </Col>\n          </Row>\n          )\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default BookSearch;\n","import React from \"react\";\n\nconst BookCard = ({ book }) => {\n  const { imageLinks, description, title, publisher } = book;\n  return (\n    <div className=\"d-flex book-search-item\">\n      {imageLinks && (\n        <div>\n          <img src={imageLinks.thumbnail} alt=\"small-thumbnail-book\" />\n        </div>\n      )}\n      <section>\n        <p>\n          <strong>Title:</strong> {title}\n        </p>\n        <p>\n          <strong>Publisher: </strong> {publisher}\n        </p>\n        {description && (\n          <p className=\"book-search-description\">\n            <strong>Description: </strong> {description}\n          </p>\n        )}\n      </section>\n    </div>\n  );\n};\nexport default BookCard;\n","import React from \"react\";\nimport BookListSearch from \"../../components/bookSearch/BookSearch\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BookSearch } from \"../../store/Book/actions\";\nimport \"./BookList.scss\";\nimport BookCard from \"../../components/bookCard/BookCard\";\n\nconst BookList = () => {\n  const dispatch = useDispatch();\n  const { data, error } = useSelector((state) => state.books);\n  /* Submit Process */\n  const onSubmit = (query) => {\n    dispatch(BookSearch(query.search));\n  };\n\n  return (\n    <div className=\"book-list-container\">\n      <h1 className=\"text-center\">Book Finder</h1>\n      <BookListSearch onSubmit={onSubmit} />\n      {!error && data  && (\n        <div className=\"mt-2\">\n          {data.items?.map((item, id) => (<BookCard key={id} book={item.volumeInfo} />))}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default BookList;\n","import { BOOK_SEARCH,ERROR_REQUESTS, BOOK_SEARCH_RECIEVE } from \"./types\";\n\nexport const BookSearch = (payload) => ({\n  type: BOOK_SEARCH,\n  payload,\n});\nexport const BookSearchAsync = (payload) => ({\n  type: BOOK_SEARCH_RECIEVE,\n  payload,\n});\n\nexport const BookSearchError = () => ({\n  type: ERROR_REQUESTS\n});\n","import { createBrowserHistory } from \"history\";\n\nexport const browserHistory = createBrowserHistory();","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport BookList from \"../pages/BookList/BookList\";\nimport { browserHistory } from './history'\nexport default function Routes() {\n  return (\n    <Router history={browserHistory}>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={BookList}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport './Loading.scss'\nconst Loading = () => {\n  return (\n    <div className=\"loading-content\">\n      <div className=\"loading-icon\">\n        <LoadingOutlined />\n      </div>\n    </div>\n  );\n};\nexport default Loading;\n","import React, { Fragment } from \"react\";\nimport \"./App.scss\";\nimport Routes from \"../routes/routes\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"../components/loading/Loading\";\nfunction App() {\n  const loading = useSelector((state) => state.isLoading);\n  return (\n    <Fragment>\n      {loading && <Loading />}\n      <Routes />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const { BOOK_SEARCH_RECIEVE, ERROR_REQUESTS } = require(\"./types\");\n\nconst INIT_STATE = {};\n\nexport const bookReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case BOOK_SEARCH_RECIEVE:\n      return (state = { ...state, data: action.payload });\n    case ERROR_REQUESTS:\n      return { ...state, error: true };\n    default:\n      return state;\n  }\n};\n","const { IS_LOADING_RECIEVE } = require(\"./types\");\n\nconst INIT_STATE =  false;\n\nexport const loadingReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case IS_LOADING_RECIEVE:\n      return state =  action.payload\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux'\nimport { bookReducer } from './Book/reducer';\nimport { loadingReducer } from './Loading/reducer'\nexport default combineReducers({\n    books: bookReducer,\n    isLoading: loadingReducer\n})","import { IS_LOADING, IS_LOADING_RECIEVE } from \"./types\";\n\n\nexport const isLoading = (payload) => ({\n  type: IS_LOADING,\n   payload\n});\nexport const isLoadingRecieve = (payload) => ({\n  type: IS_LOADING_RECIEVE,\n   payload\n});\n","import axios from \"axios\";\nimport { SuccessHandler,RequestHandler, ErrorHandler } from \"../Interceptors\";\nexport const Instance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  params: { key: process.env.REACT_APP_GOOGLE_API_KEY },\n});\nInstance.interceptors.response.use(\n  (response) => SuccessHandler(response),\n  (error) => ErrorHandler(error)\n);\nInstance.interceptors.request.use(\n  (request) => RequestHandler(request),\n);\n","import store from '../../store/index'\nimport { isLoading } from '../../store/Loading/actions'\nexport const ErrorHandler = (response) => {\n  store.dispatch(isLoading(false))\n return response\n}\n\nexport const SuccessHandler = (response) => {\n   store.dispatch(isLoading(false))\n  return response\n}\nexport const RequestHandler = (request) => {\n  store.dispatch(isLoading(true))\n return request\n}\n","import { Instance } from '../index'\nexport const searchRequest = async (query) => Instance.get('/', {\n    params: {\n        q: `${JSON.stringify(query)}`\n    }\n});\n  ","import { put, takeEvery, call } from \"redux-saga/effects\";\nimport {  BOOK_SEARCH } from \"./types\";\nimport { BookSearchAsync, BookSearchError } from \"./actions\";\nimport { searchRequest } from \"../../network/apis/Requests/Books\";\n\nfunction* handleBookSearch(query) {\n  try {\n    const result = yield call(searchRequest, query.payload);\n    yield put(BookSearchAsync(result.data));\n  }\n  catch {\n    yield put(BookSearchError());\n  }  \n}\nexport function* BookSagaWatch() {\n  yield takeEvery(BOOK_SEARCH, handleBookSearch);\n}\n","import { put, takeEvery } from \"redux-saga/effects\";\nimport {  IS_LOADING } from \"./types\";\nimport { isLoadingRecieve } from './actions'\nfunction* handleLoading(loading) {\n    yield put(isLoadingRecieve(loading.payload));\n}\nexport function* IsLoadingWatch() {\n  yield takeEvery(IS_LOADING, handleLoading);\n}\n","import { all } from 'redux-saga/effects'\nimport { BookSagaWatch } from './Book/sagas'\nimport { IsLoadingWatch } from './Loading/sagas'\n\nexport default function* rootSaga() {\n    yield all([\n      BookSagaWatch(),\n      IsLoadingWatch()\n    ])\n  }","import { createStore,  applyMiddleware } from \"redux\";\nimport RootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./rootSaga\";\nconst saga = createSagaMiddleware();\nconst composedEnhancer = composeWithDevTools(applyMiddleware(saga));\n\n const store = createStore(RootReducer, composedEnhancer);\nsaga.run(rootSaga);\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const BOOK_SEARCH = 'BOOK_SEARCH';\nexport const BOOK_SEARCH_RECIEVE = 'BOOK_SEARCH_RECIEVE';\nexport const ERROR_REQUESTS = 'ERROR_REQUESTS';\nexport const SUCCESS_REQUESTS = 'SUCCESS_REQUESTS';\n","export const IS_LOADING = 'IS_LOADING';\nexport const IS_LOADING_RECIEVE = 'IS_LOADING_RECIEVE';"],"sourceRoot":""}